name: Build and Publish
on:
  push:
    branches:
      - master
      - 'release-*'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

  workflow_dispatch:


jobs:
  docker-build-publish:
    name: Docker Build & Publish
    runs-on: ubuntu-latest
    env:
      HELM_CHART_PATH: package/helm/

    # for OIDC-based Google Cloud auth
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v2
      - name: Get commit hash
        id: get_commit_hash
        run: |
          echo "COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV

      
      # - name: Set env.ARTIFACT_VERSION
      #   run: |
      #     wget -q https://raw.githubusercontent.com/Bahmni/bahmni-infra-utils/main/setArtifactVersion.sh && chmod +x setArtifactVersion.sh
      #     ./setArtifactVersion.sh
      #     rm setArtifactVersion.sh
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      # - name: Run tests
      #   run: yarn test
      - name: Package
        run: yarn ci
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

         # ── Authenticate to Google Cloud via OIDC ───────────────────────────────
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_ID2 }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

         # ── Login to Google Artifact Registry ───────────────────────────────────
      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY1 }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}


        # ── Build & Push to Artifact Registry ──────────────────────────────────
      - name: Docker Build & Push to Artifact Registry
        env:
          IMAGE_NAME: ${{ vars.IMAGE_NAME }}
          REGISTRY: ${{ vars.REGISTRY1 }}
          IMAGE_TAG: ${{ env.COMMIT_HASH }}
          DEFAULT_TAG: latest
        run: |
          echo "Building and pushing Docker image..."
          docker build -f package/docker/Dockerfile -t $REGISTRY/$IMAGE_NAME:$IMAGE_TAG -t $REGISTRY/$IMAGE_NAME:$DEFAULT_TAG .

          echo "Pushing Docker image..."
          docker push $REGISTRY/$IMAGE_NAME:$IMAGE_TAG
          docker push $REGISTRY/$IMAGE_NAME:$DEFAULT_TAG
          echo "Docker image pushed successfully!"
        
      # - name: Login to DockerHub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_TOKEN }}
      # - name: Docker Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     platforms: linux/amd64,linux/arm64
      #     file: package/docker/Dockerfile
      #     push: true
      #     tags: anish443/implementer-interface:${{env.ARTIFACT_VERSION}},anish443/implementer-interface:latest
      
     
